import Head from 'next/head'
import { useEffect, useRef, useState } from 'react'

export default function Home() {
  // const [products, setProducts] = useState<
  //   { id: string; properties: { id: string }[] }[]
  // >([])
  const [products, setProducts] = useState<{ id: string; name: string; createAt: string }[]>([])
  const inputRef = useRef<HTMLInputElement>(null)
  const handleClick = () => {
    if (inputRef.current == null || inputRef.current.value === '') {
      alert('name을 넣어주세요.')
      return
    }
    fetch(`/api/add-item?name=${inputRef.current.value}`)
      .then((res) => res.json())
      .then((data) => alert(data.message))
  }

  useEffect(() => {
    fetch('/api/get-products')
      .then((res) => res.json())
      .then((data) => setProducts(data.items))
    // fetch('/api/get-items')
    //   .then((res) => res.json())
    //   .then((data) => setProducts(data.items))
  }, [])
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <p>
            Get started by editing&nbsp;
            <code>src/pages/index.tsx</code>
          </p>
          <input ref={inputRef} type="text" placeholder="name" />
          <button onClick={handleClick}>Add Jacket</button>
        </div>
        <div>
          <p>Product list</p>
          {/* {products &&
            products.map((item) => (
              <div key={item.id}>
                {JSON.stringify(item)}
                {item.properties &&
                  Object.entries(item.properties).map(([key, value]) => (
                    <button
                      key={key}
                      onClick={() => {
                        fetch(
                          `/api/get-detail?pageId=${item.id}&propertyId=${value.id}`
                        )
                          .then((res) => res.json())
                          .then((data) => alert(JSON.stringify(data.detail)))
                      }}
                    > 
                      {key}
                    </button>
                  ))}
              </div>
            ))} */}
          {products &&
            products.map((item) => <div key={item.id}>{item.name}<span>{item.createAt}</span></div>)}
        </div>
      </main>
    </>
  )
}
